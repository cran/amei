For reproducibility of the results in this section we have set
the random seed as follows.
<<cache=TRUE>>=
set.seed(12345)
@ 
The following sections tacitly use similarly reset seeds.

We begin by exploring the behavior of the SIR model, described in
Section~\ref{sec:sirmodel}, without any intervention. The first step
is to set the relevant parameters that are necessary for simulating
the epidemic.  These consist of: the ``true'' underlying parameters
for the SIR model upon which our costs will be evaluated; the initial
condition of the population at the beginning of the epidemic; and the
relative costs of infections, deaths, and vaccinations.
<<>>= 
tp <- list(b=0.00218, k=10, nu=0.4, mu=0) 
init <- list(S0=762, I0=1, R0=0, D0=0) 
costs <- list(vac=2, death=4, infect=1)
@ 
\citet{murray02} provides estimates of the transmission rate
($b$) and recovery rate ($\nu$), which we use in the 
\code{tp} ``true parameterization'' set above.  We set the death rate
($\mu$) to zero since there are no deaths in this epidemic.  Finally,
we set the negative binomial dispersion parameter ($k$) 
to be large to reflect the
homogeneous mixing of the population.  The \code{costs}, chosen purely for 
illustrative purposes,  describe the unit cost (or loss) 
for a single vaccination or death, relative to the
daily cost of maintaining an infected individual.

As a baseline, we are interested in the costs of a no--vaccination
policy on epidemic trajectories with the above parameters. To explore
this, we set the vaccination policy used in the simulation to zero.
<<cache=TRUE>>=
vac <- list(frac=0, stop=0)
@

We are now ready to run the Monte Carlo experiment. The function
\code{MCepi} can be used to simulate the population and cost
trajectories for the experiment. This function simulates the
stochastic SIR model under a given vaccination strategy. For each
realization of the epidemic progression the function calculates the
cost over time for the epidemic. This is repeated many
times\footnote{The number of MC simulations can be varied with the
  \code{MCreps} argument to \code{MCepi}. The default value of
  \code{MCreps} is 1000.}, and the mean trajectories for both the
populations and the costs, as well as the 5th and 95th quantiles, are
recorded.
<<cache=TRUE>>=
init.MCepi <- MCepi(init, tp, vac, costs)
@ 

Now we can simply plot the results to look at the distribution of the
susceptible, infected, and recovered individuals in the population as
the epidemic progresses ({\em top} panel of Figure~\ref{f:epis}), as well as
the distribution of costs over time ({\em bottom} panel of Figure
\ref{f:epis}).
\begin{figure}[ht!]
<<label=epis,fig=TRUE,echo=TRUE,width=8,height=5,include=FALSE,cache=TRUE>>=
plot(init.MCepi)
@
\centering
\includegraphics{amei-epis}
<<label=costs,fig=TRUE,echo=TRUE,width=8,height=5,include=FALSE,cache=TRUE>>=
plot(init.MCepi, type="costs")
@
\includegraphics{amei-costs}
\caption{Monte Carlo simulated epidemic trajectories ({\em top}) for the numbers
  of susceptible, infected, and recovered individuals, and the associated
  cost(s) ({\em bottom}) with a {\em null} vaccination strategy. 
  (2.5,50,97.5\%) quantiles are shown. }
\label{f:epis}
\end{figure}

Next we examine the dynamics of the system when we have perfect
information and use a fixed vaccination policy. First construct a grid
of admissible policies. In this case, we shall consider strategies
that: vaccinate a fixed proportion of the susceptible population, from
0 to 100\%, in steps of 10\%; and that stop vaccinating susceptibles
when the remaining susceptible population falls below some threshold
between 2 and the initial susceptible population minus 75, in
increments of 75, as explained in Section \ref{sec:optvac}.
<<cache=TRUE>>= 
vacgrid <- list(fracs=seq(0,1.0,0.1),stops=seq(2,init$S0-75,75)) 
@
Once this grid has been initialized, we
can run the Monte Carlo experiment, using the function \code{optvac},
which finds the vaccination policy that minimizes the total cost of
the (stochastic) epidemic.  This is done by simulating the epidemic
forward under the known, \code{true}, parameterization and calculating
the cost of each vaccination strategy.  
<<cache=TRUE>>= 
out.optvac <-optvac(init, tp, vacgrid, costs) 
@
This function outputs the costs
for each of the possible vaccination strategies. The best and worst
policies can be obtained as follows: 
<<cache=TRUE>>= 
best <-getpolicy(out.optvac) 
worst <-getpolicy(out.optvac, which="worst")
rbind(best, worst)
@ 
The same information can be obtained via the generic \code{print}
and \code{summary} commands, which will be shown later.  We can also
plot the cost surface over the space of possible vaccination
strategies. This takes the form of a heat plot, where lower cost
policies appear in deep red, and high cost policies appear in white
(Figure \ref{f:optvac}).

\begin{figure}[ht!]
<<label=optvac,fig=TRUE,echo=TRUE,width=8,height=7,include=FALSE,cache=TRUE>>=
plot(out.optvac) 
@ 
\centering \includegraphics{amei-optvac}
\caption{Heatmap depicting the expected cost surface associated with
  variable stop time vaccination strategies based on the true
  parameter values.  The minimum expected cost (\Sexpr{best$cost}) is
  achieved by a strategy of vaccinating \Sexpr{100*best$frac}\% of
  susceptibles at each time step, until the number of susceptibles
  falls below \Sexpr{best$stop}.  As expected, the maximum expected
  cost (\Sexpr{worst$cost} cost units) is realized through inaction
  ({\em top} row and left column policies are never implemented)}
\label{f:optvac} 
\end{figure} 
Given the calculated optimal policy, we can explore the effects of the
vaccination strategy on the progression of the epidemic together with
the trajectory of costs under this strategy. We do this by again
simulating the epidemic dynamics using the function \code{MCepi},
however this time we include the best fixed vaccination policy.

<<cache=TRUE>>=
vac.opt <- best[3:4]
opt.MCepi <- MCepi(init, tp, vac.opt, costs)
@
\begin{figure}[ht!]
<<label=episov,fig=TRUE,echo=TRUE,width=8,height=5,include=FALSE,cache=TRUE>>=
plot(opt.MCepi)
@
\centering
\includegraphics{amei-episov}
<<label=costsov,fig=TRUE,echo=TRUE,width=8,height=5,include=FALSE,cache=TRUE>>=
plot(opt.MCepi, type="costs")
@
\centering
\includegraphics{amei-costsov}
\caption{Monte Carlo simulated trajectories ({\em top}) for the numbers of
susceptible, infected, and recovered individuals and cost(s) 
({\em bottom}) trajectories under optimal (fixed) vaccination strategy.}
\label{f:epis:ov}
\end{figure}
Figure~\ref{f:epis:ov} summarizes the trajectories ({\em top}) of the
epidemic under the optimal vaccination strategy over time, and the
corresponding costs ({\em bottom}). By default we assume a fixed lag of 7
time steps from when the first infection appears to when the first
intervention can take place\footnote{This can be varied with
  the \code{start} argument to \code{MCepi}.}. This is apparent in Figure
\ref{f:epis:ov}, where there is a sharp transition from day 7 when the
vaccinations begin, and the susceptible population drops dramatically.
The number of vaccinated individuals can be added to the plot by
specifying the argument \code{showv = TRUE}, however we omit this here
to reduce clutter in the figure.  Information on the distribution of
the number of vaccine  units dispensed can be extracted as follows.
<<cache=TRUE>>=
getvac(opt.MCepi)
@  

We can compare these results to the case without vaccination (Figure
\ref{f:epis:ov}, {\em top}), and see that the optimal vaccination
strategy effectively suppresses the spread of the infection. The costs
also spike around time 7 as the vaccination policy is
implemented. These costs then stabilize at a lower level than that
observed under the no--vaccination strategy in Figure~\ref{f:epis}
({\em bottom}). We can easily extract information on the distribution
of final costs of the no--vaccination and optimal (fixed) vaccination
policies for comparison as follows.
<<cache=TRUE>>=
T <- length(opt.MCepi$Median$C)
optC <- getcost(opt.MCepi)
initC <- getcost(init.MCepi)
data.frame(rbind(initC,optC), row.names=c("init", "opt"))
@ 
The optimal (fixed/static) strategy gives a (mean) savings of
approximately \Sexpr{initC$mean-optC$mean} units, or
\Sexpr{round(100*(1-optC$mean/initC$mean))}\% compared to the cost 
without an intervention.  The same 
information is available through the generic \code{print} and
\code{summary} commands, e.g.\ 
<<cache=TRUE>>=
opt.MCepi
@ 

Now we consider adaptive management strategies using the \code{manage}
function. In this case we assume that we do not have perfect
information on the underlying epidemic.  As such, we want to
simultaneously estimate the epidemic model parameters as well as find
an optimal management strategy.

In order to proceed, we must define the \code{epistep} function, which
will provide the ``observed" SIR count data upon which our inferences
will be based.  This function can be regarded as the ``true'' disease
process that is being approximated by the SIR model we have described.
The default \code{epistep} function provides simulations from the same
disease model (Eqns.~\ref{bini}--\ref{dtilde}) that is being used for
assumed for inference, however the user can specify custom
\code{epistep} functions.  By customizing this function, a user can
provide custom data to \pkg{amei}, or explore the effects of model
misspecification, as we shall describe in Section~\ref{sec:alt}.

We also need to start with an initial guess, i.e.\ priors, for the
epidemic parameters that we want to estimate. The default option is to
do this by choosing appropriate hyperparameters for the priors
explained earlier.  The defaults used by \code{manage} are those
given in Section~\ref{sec:estimate}. 

Here, we run the \code{manage} function with default values for
hyperparameters and \code{epistep} to adaptively design a vaccination
strategy to manage the epidemic.  At each time step in the evolution
of the epidemic the \code{manage} function uses MCMC to sample from
the posterior distribution of the parameters $(b,k,\nu,\mu)$ given the
available history of the epidemic and any already--implemented
intervention.  Then, a thinned subset of these samples are used
propagate uncertainty in the parameter estimates through to the costs
of the vaccination strategies.  These costs are obtained by performing
Monte Carlo forward simulations of the epidemic from the current time
point into the future with those parameters.  As explained in
Section~\ref{sec:optvac} we choose to implement the strategy that
most frequently minimizes the cost. After the intervention is
implemented, the state in the next time step is determined by
\code{epistep}, and the process is repeated.\footnote{The function
  \code{manage} has default time horizons specified for both the last
  time an intervention can be implemented and the time of the final
  observation of the epidemic. These can be varied with the arguments
  \code{Tstop} and \code{T}, respectively. By default we specify
  \code{T=40} and \code{Tstop=T}.}
<<cache=TRUE>>= 
out.man <- manage(init, epistep, vacgrid, costs) 
@
\begin{figure}[ht!]
<<label=epi,fig=TRUE,echo=TRUE,width=8,height=5,include=FALSE,cache=TRUE>>=
plot(out.man)
@
\centering
\includegraphics{amei-epi}
<<label=cost,fig=TRUE,echo=TRUE,width=8,height=5,include=FALSE,cache=TRUE>>=
plot(out.man, type="cost")
@
\centering
\includegraphics{amei-cost}
\caption{Trajectory ({\em top}) in terms of the numbers of susceptible,
  infected, recovered, and vaccinated individuals, and the
  corresponding cost ({\em bottom}) of the epidemic under adaptive
  management.}
\label{f:epi}
\end{figure}
To explore the results of the simulation we again plot the evolution
of the epidemic (Figure~\ref{f:epi}, {\em top}) as well as the cost
trajectory under the optimal vaccination (Figure~\ref{f:epi}, {\em bottom}),
both for a single run. We can now compare the case with adaptive
management to the case without vaccination (Figure~\ref{f:epis},
{\em bottom}), as well as the case of optimal vaccination with perfect
information (Figure~\ref{f:epis:ov}, {\em bottom}).  As before, we can 
extract information on the final cost of the epidemic as follows.
<<cache=TRUE>>=
getcost(out.man)
@ 
Since the \code{manage} function is not performing a Monte Carlo
experiment, the number returned is a scalar.  Notice that the adaptive
strategy is comparable to the best fixed strategy obtained when the
true parameterization is known.  Later, we shall perform a Monte Carlo
version of the adaptive management strategy to make a more meaningful
comparison.

\begin{figure}[ht!]
<<label=params,fig=TRUE,echo=TRUE,width=8,height=7,include=FALSE,cache=TRUE>>=
true <- as.list(formals(epistep)$true)
plot(out.man, type="params",tp=tp) 
@ 
\centering \includegraphics[trim=0 0 0 20]{amei-params}
\caption{Final posterior distributions of estimated parameters 
(clockwise from the left: transmission rate, overdispersion parameter, 
mortality rate, recovery rate).  ``True'' parameter values are 
indicated by a dot; mean posterior values are indicated by an `x'; 
and the central 95\% region of the distribution is shaded.}
\label{f:params} 
\end{figure} 
We can also see the final distribution of the SIR model parameters
contained in \code{out.man$samps}.
This is shown in Figure~\ref{f:params}.  A summary is provided by
the generic \code{print} and \code{summary} commands:
<<cache=TRUE>>=
out.man
@  
%{\bf Perhaps we should also show the evolution of the parameter 
%distribution over time. }
% \begin{figure}[ht!]
% <<label=fracs,fig=TRUE,echo=TRUE,width=8,height=5,include=FALSE,cache=TRUE>>=
% plot(out.man, type="fracs")
% @
% \centering
% \includegraphics[trim=0 0 0 40]{amei-fracs}
% <<label=stops,fig=TRUE,echo=TRUE,width=8,height=5,include=FALSE,cache=TRUE>>=
% plot(out.man, type="stops")
% @
% \includegraphics[trim=0 0 0 40]{amei-stops}
% \caption{The fraction vaccinated ({\em top}) and the stop time ({\em bottom})
% at each time step in the evolution of the epidemic under management
% when vaccinations start at time 8, by default.}
% \label{f:evol}
% \end{figure}
% Finally we can explore how the adaptive vaccination strategy evolves
% over time. Figure~\ref{f:evol} shows the fraction vaccinated ({\em top}) and
% the stop time ({\em bottom}) at each time step after vaccinations are
% allowed to start (the default is time 8).  {\bf Can we say something
%   more about these plots, generally --- not the specific ones
%   we got this time?}

We also note that it is possible to utilize the \code{manage} function
in a piecemeal way, or in ``epochs''.  This is accomplished by passing
the output of the \code{manage} function, an \code{"epiman"}-class
object, as the first (\code{init}) argument.  The management of the
epidemic will re-start where it left off.  It will stop at the newly
specified (later) time horizon \code{Tstop} specified by that argument.
