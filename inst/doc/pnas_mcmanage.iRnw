%<<echo=false,results=hide>>=
%seed <- 12345; set.seed(seed)
%@ 

Next, we illustrate a Monte Carlo experiment where epidemics are
initialized and proceed randomly through the adaptive management
strategy illustrated above so that we can see the average behavior,
costs, and associated variability.  The function {\tt MCmanage}
facilitates this experiment, and it essentially calls the {\tt
  manage} function many times (which can be controlled by the {\tt
  MCreps} argument).  In order to provide a (relatively) quick
demonstration we have set a low default of {\tt MCreps = 30} and have
used low defaults for the other Monte Carlo parameters to {\tt
  management}.

<<cache=TRUE>>=
out.MCmanage <- MCmanage(init, epistep, vacgrid, costs)
@ 
To reproduce the results in Merl, et al.~\cite{merl08}, use 
\begin{verbatim}
MCvits = 100, MCMCpits = 10000, vacsamps = 100, MCreps = 100
\end{verbatim}
and otherwise use the defaults.  The object that is returned is of
class \verb!"MCepi"! with fields similar to those that are output from
the {\tt MCepi} function which implements a static (fixed) vaccination 
strategy.  Thus, the same generic plot commands can be used.
\begin{figure}[ht!]
<<label=MCmanepis,fig=TRUE,echo=TRUE,width=8,height=5,include=FALSE,cache=TRUE>>=
plot(out.MCmanage)
@
\centering
\includegraphics{amei-MCmanepis}
<<label=MCmancosts,fig=TRUE,echo=TRUE,width=8,height=5,include=FALSE,cache=TRUE>>=
plot(out.MCmanage, type="costs")
@
\includegraphics{amei-MCmancosts}
\caption{Monte Carlo simulated epidemic trajectories (top) for the
  numbers of susceptible, infected, and vaccinated individuals, and
  the associated cost(s) (bottom) under adaptive management}
\label{f:epismanage}
\end{figure}
Figure \ref{f:epismanage} shows plots summarizing the distribution of
epidemic trajectories (top) and costs (bottom) under the adaptive
management.  Distributional information on number of vaccine units
dispensed can be extracted as follows.
<<cache=TRUE>>=
getvac(out.MCmanage)
@ 
\begin{figure}[ht!]
<<label=MCmanfracs,fig=TRUE,echo=TRUE,width=8,height=5,include=FALSE,cache=TRUE>>=
plot(out.MCmanage, type="fracs")
@
\centering
\includegraphics{amei-MCmanfracs}
<<label=MCmanstops,fig=TRUE,echo=TRUE,width=8,height=5,include=FALSE,cache=TRUE>>=
plot(out.MCmanage, type="stops")
@
\includegraphics{amei-MCmanstops}
\caption{Fractions vaccinated (top) and stopping levels (bottom) for  
  the simulated epidemic trajectories shown in Figure \ref{f:epismanage}
  that were under adaptive management.  In both cases, the $(2.5,50,97.5)$-\%
  quantiles are shown.}
\label{f:MCfracs}
\end{figure}
Figure \ref{f:MCfracs} shows the distribution of fractions of
individuals vaccinated and the stopping level for the epidemic
trajectories under adaptive management in the Monte Carlo experiment.
We can compare the costs (and quantile bounds) to that of the best
fixed vaccination strategy calculated assuming that the true
parameterization is known.
<<cache=TRUE>>=
cinit <- getcost(init.MCepi)
copt <- getcost(opt.MCepi)
cman <- getcost(out.MCmanage)
data.frame(rbind(cinit, copt, cman), 
           row.names=c("init", "opt", "man"))
@ 
The cost of the non-intervention strategy is shown again for
calibration purposes.  As before, the generic {\tt print} and {\tt
  summary} commands can be used to obtain the same information.
Notice that, in this short Monte Carlo experiment, the adaptive
management scheme approximates the best static vaccination scheme
obtained then the true parameterization is known in advance.  

It is interesting to compare to what the cost of managing the epidemic
would have been {\em without} estimating the parameters as the
epidemic progressed, but rather by guessing what the appropriate
parameters might be.  Suppose our best guess at the parameters
underestimated the true transmission probability $b$ and overestimated
the true recovery probability $\nu$.
<<cache=TRUE>>=
bad <- list(b=0.001, k=10, nu=0.9, mu=0)
@ 
The optimal (static) policy under this parameterization can
be constructed, as demonstrated above.
<<cache=TRUE>>=
costs.bad <- optvac(init, bad, vacgrid, costs)
pol.bad <- getpolicy(costs.bad)
pol.bad
@ 
Then, we can calculate the distribution of costs of managing
the true epidemic with a policy developed under our best guess
of the parameterization.
<<cache=TRUE>>=
bad.MCepi <- MCepi(init, true, pol.bad[3:4], costs)
cbad <- getcost(bad.MCepi)
cbad
@ 
Comparing these costs with the ones obtained above, under adaptive
management, we can see that a poor guess can lead to a significantly
worse strategy---nearly 
\Sexpr{round(100*cbad$mean/(cbad$mean + cman$mean))}\% larger on average. 
Clearly, good quality (online)
estimates of the SIR model are crucial to ensuring a cost--effective
approach to the management of an epidemic.
